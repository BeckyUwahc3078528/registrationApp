"""
Django settings for registerApp project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from django.urls import path, include 
#from dotenv import load_dotenv #OPEN-FOR-DEPLOYMENT
#import os #OPEN-FOR-DEPLOYMENT

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent
#dotenv_path = os.path.join(BASE_DIR, 'utility', '.env') #OPEN-FOR-DEPLOYMENT
#load_dotenv(dotenv_path) #OPEN-FOR-DEPLOYMENT




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-zg05g^%a$ld5npmq4y1=67w*9fwx)#2yfxnh@*t_b(4-&ci!r4' #CLOSE-FOR-DEPLOYMENT
#OPEN-FOR-DEPLOYMENT
# SECRET_KEY = os.getenv('SECRET_KEY', 'I73wsRshQcW5RAo')
# WEBSITE_HOSTNAME = os.getenv('WEBSITE_HOSTNAME', None) 

#DEBUG = None #OPEN-FOR-DEPLOYMENT ??


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  #CLOSE-FOR-DEPLOYMENT
ALLOWED_HOSTS = [] #CLOSE-FOR-DEPLOYMENT
#OPEN-FOR-DEPLOYMENT
# if DEBUG: 

#     ALLOWED_HOSTS = [] 

# else: 

#     ALLOWED_HOSTS = [WEBSITE_HOSTNAME] 

#     CSRF_TRUSTED_ORIGINS = [f'https://{WEBSITE_HOSTNAME}'] 

# CORS_ALLOWED_ORIGINS = [f'https://{WEBSITE_HOSTNAME}']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'studentApp.apps.StudentappConfig',
    'users',
    'crispy_forms',
    'crispy_bootstrap4',
    'courses',
    'corsheaders'
]
CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap4' #CLOSE-FOR-DEPLOYMENT

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'registerApp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'registerApp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
#CLOSE-FOR-DEPLOYMENT
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

#OPEN-FOR-DEPLOYMENT
# DATABASES = {
#     'default': {
#         'ENGINE': os.getenv('DATABASE_ENGINE'),
#         'NAME': os.getenv('DATABASE_NAME'),
#         'USER': os.getenv('DATABASE_USER'),
#         'PASSWORD': os.getenv('DATABASE_PASSWORD'),
#         'HOST': os.getenv('DATABASE_HOST'),
#         'PORT': os.getenv('DATABASE_PORT'),
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

#FOR-NONE STAGE
# STATIC_URL = 'static/'
# MEDIA_ROOT = BASE_DIR / 'media'
# MEDIA_URL = '/media/'

#CLOSE-FOR-DEPLOYMENT
STATICFILES_DIRS = [
    BASE_DIR / "static"
   
]

STATIC_URL = 'static/'
MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'

#OPEN-FOR-DEPLOYMENT
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#OPEN-FOR-DEPLOYMENT
# AZURE_SA_NAME = os.environ['AZURE_SA_NAME']
# AZURE_SA_KEY = os.environ['AZURE_SA_KEY']

# STORAGES = {
#     "default": {
#         "BACKEND": "storages.backends.azure_storage.AzureStorage",
#         "OPTIONS": {
#             "account_name": AZURE_SA_NAME,
#             "account_key": AZURE_SA_KEY,
#             "azure_container": "media",
#         },
#     },
#     "staticfiles": {
#         "BACKEND": "storages.backends.azure_storage.AzureStorage",
#         "OPTIONS": {
#             "account_name": AZURE_SA_NAME,
#             "account_key": AZURE_SA_KEY,
#             "azure_container": "static",
#         },
#     },
# }



#OPEN-FOR-DEPLOYMENT
#STATIC_URL = f'https://{AZURE_SA_NAME}.blob.core.windows.net/static/'
#MEDIA_URL = f'https://{AZURE_SA_NAME}.blob.core.windows.net/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap4'
CRISPY_TEMPLATE_PACK = 'bootstrap4'
LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = 'login' 